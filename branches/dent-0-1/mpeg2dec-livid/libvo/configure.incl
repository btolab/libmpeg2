dnl AC_SUBST(HAVE_3DFX)
dnl AC_SUBST(HAVE_MGA)
dnl AC_SUBST(HAVE_SDL)
dnl AC_SUBST(HAVE_X11)
dnl AC_SUBST(HAVE_XV)
AC_SUBST(HAVE_DGA)
AC_SUBST(X11_CFLAGS)
AC_SUBST(X11_CONFIG_LIBS)
AC_SUBST(X11_CONFIG_SOURCES)
AC_SUBST(X11_CONFIG_OBJS)

dnl 
dnl Display driver probing...
dnl

AC_ARG_ENABLE(3dfx,
  [  --disable-3dfx		make a version not using experimental 3dfx driver],
  enable_3dfx=no, enable_3dfx=yes)
if test x$enable_3dfx = xyes; then
	AC_MSG_CHECKING(for /dev/3dfx)

	if test -c "/dev/3dfx"; then
		AC_MSG_RESULT(found)
		X_LIBS="$X_LIBS -lXxf86dga"
		AC_DEFINE(HAVE_3DFX,1,[Define if MGA GX00 is installed])
		AM_CONDITIONAL(HAVE_3DFX, true)
	else
		AC_MSG_RESULT(not found)
		AM_CONDITIONAL(HAVE_3DFX,false)
	fi
else
	AM_CONDITIONAL(HAVE_3DFX,false)
fi


dnl
dnl Matrox Millenium GX00 BES and YUV2RGB support
dnl

AC_ARG_ENABLE(mga,
  [  --disable-mga		make a version not using MGA],
  enable_mga=no, enable_mga=yes)
if test x$enable_mga = xyes; then
	AC_MSG_CHECKING(for /dev/mga_vid)

	if test -c "/dev/mga_vid"; then
		AC_MSG_RESULT(found)
		AC_DEFINE(HAVE_MGA,1,[Define if MGA GX00 is installed])
		AM_CONDITIONAL(HAVE_MGA, true)
	else
		AC_MSG_RESULT(not found)
		AC_MSG_WARN("to create /dev/mga_vid - use mknod /dev/mga_vid c 178 0")
	fi
else
	AM_CONDITIONAL(HAVE_MGA,false)
fi


dnl
dnl MLIB support
dnl

AC_ARG_ENABLE(mlib,
  [  --disable-mlib          make a version not using mediaLib],
  enable_mlib=no, enable_mlib=yes)
if test x$enable_mlib = xyes; then
  AC_CHECK_LIB(mlib, main,
               [ LIBS="$LIBS -L/opt/SUNWmlib/lib -lmlib"
                 X11_CONFIG_SOURCES="$X11_CONFIG_SOURCES yuv2rgb_mlib.c"
                 X11_CONFIG_OBJS="$X11_CONFIG_OBJS yuv2rgb_mlib.lo"
                 X11_CFLAGS="$X11_CFLAGS -I/opt/SUNWmlib/include"
                 AC_DEFINE(HAVE_MLIB) ],
              , -L/opt/SUNWmlib/lib)
else
	AM_CONDITIONAL(HAVE_MLIB,false)
fi


dnl SDL option added by Ryan C. Gordon 04/23/2000
dnl   !!! This really needs to check the SDL version.
dnl   !!! I think we're using SDL 1.1 features, so 1.0 won't cut it.

AC_ARG_ENABLE(sdl,
  [  --disable-sdl		make a version not using SDL],
  enable_sdl=no, enable_sdl=yes)
if test "x$enable_sdl" = xyes; then
	AC_CHECK_PROG(SDLCONFIG, sdl-config, yes)

	if test "x$SDLCONFIG" = xyes; then
		AC_DEFINE(HAVE_SDL)
		AM_CONDITIONAL(HAVE_SDL,true)
		X11_CFLAGS="$X11_CFLAGS `sdl-config --cflags`"
		X11_CONFIG_LIBS="$X11_CONFIG_LIBS `sdl-config --libs`"
	fi
fi


dnl
dnl Check for X11 lib
dnl

AC_CHECK_LIB(X11, XOpenDisplay, have_x11_lib=yes,
               have_x11_lib=no, -L$x_libraries)

if test "$have_x11_lib" = "yes"; then
	AC_DEFINE(HAVE_X11)
	X_X11_LIB="-lX11"
	AM_CONDITIONAL(HAVE_X11,true)
else
	AC_DEFINE(HAVE_X11)
	X_X11_LIB=""
	AM_CONDITIONAL(HAVE_X11,false)
fi
X_X11_INC=$x_includes

AC_SUBST(X_X11_LIB)
AC_SUBST(X_X11_INC)


dnl
dnl Checks for libraries. (Xv)
dnl

AC_ARG_ENABLE(xv,
  [  --disable-xv		make a version not using Xv],
  enable_xv=no, enable_xv=yes)
AC_PATH_XTRA
if test "$enable_xv" = "yes"; then
AC_CHECK_LIB(Xv, XvShmCreateImage, 
	X_LIBS="$X_LIBS -lXv"
	AC_DEFINE(HAVE_XV),,
		-L$x_libraries -lXext -lX11)
fi

dnl
dnl Checks for libraries. (Xxf86dga)
dnl

AC_ARG_ENABLE(dga,
  [  --disable-dga		make a version not using DGA],
  enable_dga=no, enable_dga=yes)
AC_PATH_XTRA
if test "$enable_dga" = "yes"; then
	AC_PATH_XTRA
	AC_CHECK_LIB(Xxf86dga, XF86DGAQueryExtension,
		X_LIBS="$X_LIBS -lXxf86dga"
		AC_DEFINE(HAVE_DGA),,
		-L$x_libraries -lXext -lX11)
fi

dnl
dnl There must be a better way to check for SMP....
dnl

AC_MSG_CHECKING(for SMP)
AC_SUBST(MOD_CFLAGS)
if uname -a | grep SMP > /dev/null; then
	AC_MSG_RESULT(yes)
	MOD_CFLAGS=-D__SMP__
else
	AC_MSG_RESULT(no)
fi


dnl
dnl Do the right thing for architecture specific goodness
dnl

case "$host_alias" in
i?86-* | k?-*) dnl catch i386,i486,i586,i686,k6,k7
	X11_CONFIG_SOURCES="$X11_CONFIG_SOURCES yuv2rgb_mmx.c"
	X11_CONFIG_OBJS="$X11_CONFIG_OBJS yuv2rgb_mmx.lo" ;;
alpha*-*) ;;
sparc-*) ;;
ppc-*) ;;
esac

