dnl Autoconf configuration script mpeg2dec
dnl 
dnl Aaron Holtzman - May 1999
dnl
AC_INIT(parse.c)
AC_CANONICAL_HOST
AC_PREREQ(2.13)
AM_CONFIG_HEADER(config.h)
AM_INIT_AUTOMAKE(mpeg2dec, 0.1.6)

AM_MAINTAINER_MODE
AC_PROG_CC
AC_PROG_GCC_TRADITIONAL
AC_PROG_RANLIB


dnl 
dnl some --with/--without args
dnl

dnl for mga support
AC_DEFUN(BUILD_MGA,[
  AC_ARG_WITH(mga,
    [  --with-mga              build with MGA support (default)],
    [case "$withval" in
      yes)
         build_mga=yes
         build_x11=no
         build_gatos=no
      ;;
      *)
         build_mga=no
      ;;
    esac],[
    build_mga=yes
    build_gatos=no
    build_x11=no
  ])
])

dnl for gatos support
AC_DEFUN(BUILD_GATOS,[
  AC_ARG_WITH(gatos,
    [  --with-gatos            build with GATOS support],
    [case "$withval" in
      no)
         build_gatos=no
      ;;
      *)
         build_gatos=yes
         build_mga=no
         build_x11=no
      ;;
    esac],[
    build_gatos=no
  ])
])

dnl for x11 support
AC_DEFUN(BUILD_X11,[
  AC_ARG_WITH(x11,
    [  --with-x11              build with X11 support],
    [case "$withval" in
      no)
         build_x11=no
      ;;
      *)
         build_x11=yes
         build_mga=no
         build_gatos=no
      ;;
    esac],[
    build_x11=no
  ])
])


dnl
dnl Call previous functions
dnl
BUILD_MGA
BUILD_GATOS
BUILD_X11


dnl
dnl Final supports checks
dnl
if test "$build_mga" = "yes"; then
   AC_MSG_CHECKING(for /dev/mga_vid)

   if test -c "/dev/mga_vid"; then
      AC_MSG_RESULT(found)
      CONFIG_OBJS="$CONFIG_OBJS display_mga_vid.o";
      DRIVERS=drivers
      build_mga=yes
      build_x11=no
      build_gatos=no
   else
      AC_MSG_RESULT(not found - X11 fallback configured)
      CONFIG_OBJS="$CONFIG_OBJS display_x11.o"
      DRIVERS=
      build_mga=no
      build_x11=yes
      build_gatos=no
   fi

elif test "$build_gatos" = "yes"; then
   AC_CHECK_LIB(gatos, main, have_gatos_lib=yes, have_gatos_lib=no,
                -L/usr/X11R6/lib -L/usr/lib -L/usr/local/lib)

   AC_MSG_CHECKING(for libgatos)

   if test "$have_gatos_lib" = "yes"; then
      AC_MSG_RESULT(found)
      CONFIG_OBJS="$CONFIG_OBJS display_gatos.o";
      GATOS_LIB="-lgatos"
      DRIVERS=
      build_mga=no
      build_x11=no
      build_gatos=yes
   else
      AC_MSG_RESULT(not found - X11 fallback configured)
      CONFIG_OBJS="$CONFIG_OBJS display_x11.o"
      DRIVERS=
      build_mga=no
      build_x11=yes
      build_gatos=no
   fi

elif test "$build_x11" = "yes"; then

      CONFIG_OBJS="$CONFIG_OBJS display_x11.o"
      DRIVERS=
      build_mga=no
      build_x11=yes
      build_gatos=no

else  dnl Forcing x11 support if mga/gatos/x11 disabled by user
      AC_MSG_RESULT(!!!Oops!!! all supports disabled - X11 fallback configured)

      CONFIG_OBJS="$CONFIG_OBJS display_x11.o"
      DRIVERS=
      build_mga=no
      build_x11=yes
      build_gatos=no

fi
AC_SUBST(CONFIG_OBJS)
AC_SUBST(DRIVERS)
AC_SUBST(GATOS_LIB)


AC_MSG_CHECKING(for SMP)
AC_SUBST(MOD_CFLAGS)
if uname -a | grep SMP >/dev/null; then
	AC_MSG_RESULT(yes)
	MOD_CFLAGS=-D__SMP__
else
	AC_MSG_RESULT(no)
fi

dnl Checks for libraries. (X11)
AC_PATH_XTRA

dnl Figure out which OS we're on and what to do about it
case "$host" in
*-linux*) ;;
*-solaris*) ;;
*) ;;
esac

dnl Set the appropriate architecture define
case "$host" in
i?86-*)
	AC_DEFINE(__i386__) 
	CONFIG_OBJS="$CONFIG_OBJS idct_mmx.o idct_block_mmx.o motion_comp_mmx.o";;
alpha*-*) AC_DEFINE(__alpha__);;
sparc-*) AC_DEFINE(__sparc__);;
ppc-*) AC_DEFINE(__ppc__);;
*) echo "$host is not currently supported by ac3dec"; exit 1;;
esac

AC_OUTPUT( tools/Makefile drivers/Makefile Makefile ) 
