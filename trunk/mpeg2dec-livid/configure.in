dnl Process this file with autoconf to produce a configure script.
AC_PREREQ(2.13)
AC_INIT(src/mpeg2dec.c)
AC_CONFIG_AUX_DIR(autotools)
AM_INIT_AUTOMAKE(mpeg2dec,0.1.8-merge2)
AM_CONFIG_HEADER(include/config.h)

dnl I hate this
dnl AM_MAINTAINER_MODE

dnl Checks for programs.
AC_PROG_CC
AC_PROG_GCC_TRADITIONAL
AM_DISABLE_SHARED
AM_PROG_LIBTOOL

dnl Checks for libraries.

dnl Checks for header files.
INCLUDES='-I$(top_srcdir)/include -I$(top_builddir)/include'
AC_SUBST(INCLUDES)
AC_CHECK_GENERATE_INTTYPES(include)

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_C_INLINE
AC_C_BIGENDIAN

dnl Checks for library functions.

dnl GCC-specific flags
if test x"$GCC" = x"yes"; then

    dnl compiler warnings
    OPT_CFLAGS="$CFLAGS -Wall -Werror"
    AC_TRY_CFLAGS([$OPT_CFLAGS],[CFLAGS=$OPT_CFLAGS])

    dnl -O3
    changequote(<<,>>)
    OPT_CFLAGS=`echo "$CFLAGS"|sed "s/-O[0-9]*//g;"`
    changequote([,])
    OPT_CFLAGS="$OPT_CFLAGS -O3"
    AC_TRY_CFLAGS([$OPT_CFLAGS],[CFLAGS=$OPT_CFLAGS])

    dnl -fomit-frame-pointer
    OPT_CFLAGS="$CFLAGS -fomit-frame-pointer"
    AC_TRY_CFLAGS([$OPT_CFLAGS],[CFLAGS=$OPT_CFLAGS])

    dnl arch-specific flags
    case "$host_alias" in
    i?86-* | k?-*)
	AC_DEFINE([ARCH_X86],,[x86 architecture])
	case "$host_alias" in
	i386-*) OPT_CFLAGS="$CFLAGS -mcpu=i386";;
	i486-*) OPT_CFLAGS="$CFLAGS -mcpu=i486";;
	i586-*) OPT_CFLAGS="$CFLAGS -mcpu=pentium";;
	i686-*) OPT_CFLAGS="$CFLAGS -mcpu=pentiumpro";;
	k6-*)   OPT_CFLAGS="$CFLAGS -mcpu=k6";;
	esac
	AC_TRY_CFLAGS([$OPT_CFLAGS],[CFLAGS=$OPT_CFLAGS]);;
    sparc-*)
	OPT_CFLAGS="$CFLAGS -mcpu=ultrasparc -mvis"
	AC_TRY_CFLAGS([$OPT_CFLAGS],[CFLAGS=$OPT_CFLAGS]);;
    esac
fi

dnl gcc __attribute__ ((aligned ()))
AC_C_ATTRIBUTE_ALIGNED
AM_CONDITIONAL(STANDALONE_LIBVO, true )
PLUGIN_DIR=${libdir}
AC_SUBST(PLUGIN_DIR)
AC_SUBST([LIBMPEG2_CFLAGS])
AC_SUBST([LIBMPEG2_LIBS])

dnl check for mlib
AC_ARG_ENABLE([mlib],
    [  --disable-mlib          make a version not using mediaLib])
if test x"$enable_mlib" != x"no"; then
    AC_CHECK_LIB([mlib],[mlib_VideoColorYUV2RGB420],
        [AC_DEFINE([LIBMPEG2_MLIB],,[libmpeg2 mlib support])
        LIBMPEG2_CFLAGS="$LIBMPEG2_CFLAGS -I/opt/SUNWmlib/include"
        LIBMPEG2_LIBS="$LIBMPEG2_LIBS -L/opt/SUNWmlib/lib -R/opt/SUNWmlib/lib -lmlib"],,
        [-L/opt/SUNWmlib/lib -R/opt/SUNWmlib/lib])
fi


dnl
dnl How things work:
dnl 
dnl We do tests if a specified driver is expected to compile.
dnl If this is true, we put the name of the plugin into
dnl the variable LIBS_VIDEO_OUTPUT.
dnl
dnl The test may define a HAVE_<FEATURE> variable (but keep
dnl this to a minimum.[maybe one])


if test "x$INCLUDES" != "xNONE"; then
   all_includes="${all_includes} $INCLUDES"
fi


dnl
dnl startup with defautl values
dnl

have_3dfx=no
have_mga=no
have_sdl=no
have_ggi=no
have_x11=no
have_xv=no
have_dga=no
have_mlib=no


dnl 
dnl Display driver probing...
dnl

dnl we always build the these drivers

LIBS_VIDEO_OUTPUT="${LIBS_VIDEO_OUTPUT} display_null.la display_md5.la display_pgm.la"


dnl
dnl Check for X11 lib
dnl

AC_PATH_X
AC_PATH_XTRA

if test "x$no_x" != xyes; then
	LIBS_VIDEO_OUTPUT="$LIBS_VIDEO_OUTPUT libdisplay_x11.la"
        all_includes="${all_includes} -I$ac_x_includes"
        all_libraries="${all_libraries} -L$ac_x_libraries"
        X_LIBS="-lX11 -lXext"
        X_LIBS_PATH="$ac_x_libraries"
	have_x11=yes
        AC_DEFINE(HAVE_X11,1,[Defined if X11 found])
	AC_SUBST(X_LIBS)
	AC_SUBST(X_LIBS_PATH)
fi

dnl
dnl The 3dfx driver is compiled when we find /dev/3dfx
dnl _if_ if needs dga to link the dga check must succed as well!
dnl

AC_ARG_ENABLE(3dfx,
              [  --disable-3dfx         3dfx driver],
              enable_3dfx=no, enable_3dfx=yes)
if test x$enable_3dfx = xyes; then
        AC_MSG_CHECKING(for /dev/3dfx)

        if test -c "/dev/3dfx"; then
                AC_MSG_RESULT(found)
                LIBS_VIDEO_OUTPUT="$LIBS_VIDEO_OUTPUT display_3dfx.la"
                have_3dfx=yes
                AC_DEFINE(HAVE_3DFX,1,[Defined if 3DFX found])
        else
                AC_MSG_RESULT(not found)
        fi
fi




dnl
dnl Matrox Millenium GX00 BES and YUV2RGB support
dnl

AC_ARG_ENABLE(mga,
              [  --disable-mga          make a version not using MGA],
              enable_mga=no, enable_mga=yes)
if test x$enable_mga = xyes; then
        AC_MSG_CHECKING(for /dev/mga_vid)

        if test -c "/dev/mga_vid"; then
                AC_MSG_RESULT(found)
                LIBS_VIDEO_OUTPUT="$LIBS_VIDEO_OUTPUT display_mga.la"
                have_mga=yes
                AC_DEFINE(HAVE_MGA,1,[Defined if MGA found])
        else
                AC_MSG_RESULT(not found)
        fi
fi


dnl
dnl check for sdl
dnl Note: SDL comes with its own M4 marco to perform this test
dnl Additonal note: this macro is broken, and returns
dnl a mixed output von SDL_LIBS (search patch. libtool additions
dnl and library name)
dnl argh.

AC_ARG_ENABLE(sdl,
              [  --disable-sdl          make a version not using SDL],
              enable_sdl=no, enable_sdl=yes)
if test "x$enable_sdl" = xyes; then
        AM_PATH_SDL(1.1.6,
                [LIBS_VIDEO_OUTPUT="$LIBS_VIDEO_OUTPUT display_sdl.la"
                 have_sdl=yes
                 AC_DEFINE(HAVE_SDL,1,[Defined if SDL found]) ])
        AC_MSG_RESULT([ SDL LIBS: $SDL_LIBS])
        AC_MSG_RESULT([ SDL CFLAGS: $SDL_CFLAGS])
fi

dnl
dnl GGI library
dnl

AC_ARG_ENABLE(ggi, [  --enable-ggi            make a version using GGI],
        enable_ggi=yes, enable_ggi=no)
if test "x$enable_ggi" = xyes; then
        GGI_LIBS="-lggi"
        LIBS_VIDEO_OUTPUT="$LIBS_VIDEO_OUTPUT display_ggi.la"
        have_ggi=yes
        AC_DEFINE(HAVE_GGI,1,[Defined if GGI found])
fi


dnl
dnl Checks for libraries. (Xv)
dnl


AC_MSG_CHECKING(for X11 video extension)
AC_TRY_COMPILE([
                #include <X11/Xlib.h>
                #include <X11/extensions/Xvlib.h>
                ],[
                ],[
                have_xv=no
               ])
AC_MSG_RESULT($have_xv)
if test x$have_xv = xyes; then  
   AC_DEFINE(HAVE_XV,1,[Define if you have XFree4.0 XV extension])
   XV_LIBS="-lXv"
fi
AC_SUBST(XV_LIBS)




dnl
dnl Checks for libraries. (Xxf86dga)
dnl

have_dga=no
AC_ARG_ENABLE(dga,
              [  --disable-dga          make a version not using DGA],
              enable_dga=no, enable_dga=yes)
if test "x$enable_dga" = "xyes"; then
        AC_CHECK_LIB(Xxf86dga, XF86DGAQueryExtension,
                     DGA_LIBS="-lXxf86dga")
        have_dga=yes
        AC_DEFINE(HAVE_DGA,1,[Defined if DGA found])
fi


dnl
dnl Check for mediaLib
dnl


AC_ARG_ENABLE(mlib,
              [  --disable-mlib          make a version not using mediaLib],
              enable_mlib=no, enable_mlib=yes)

if test x$enable_mlib = xyes; then
  AC_CHECK_LIB(mlib, mlib_VideoColorYUV2RGB420,
                [ all_includes="${all_includes} -I/opt/SUNWmlib/include"
                  all_libraries="${all_libraries} -L/opt/SUNWmlib/lib"
                  MLIB_LIBS="-lmlib"
                  have_mlib=yes 
                  AC_DEFINE(HAVE_MLIB,1,[Defined if MLIB found]) ],,
                  -L/opt/SUNWmlib/lib -R/opt/SUNWmlib/lib)
fi



dnl
dnl fill in all libraries which should be built
dnl
LIBS_VIDEO_OUTPUT_NOINST=$LIBS_VIDEO_OUTPUT
AC_SUBST(LIBS_VIDEO_OUTPUT_NOINST)
AC_SUBST(LIBS_VIDEO_OUTPUT)
AC_SUBST(SDL_LIBS)
AC_SUBST(X11_LIBS)
AC_SUBST(XV_LIBS)
AC_SUBST(DGA_LIBS)
AC_SUBST(MLIB_LIBS)
AC_SUBST(GGI_LIBS)

echo "
output video
------------
x11                     : ${have_x11}
        xv              : ${have_xv}
        dga             : ${have_dga}
SDL                     : ${have_sdl}
GGI                     : ${have_ggi}
3dfx                    : ${have_3dfx}
matrox g200/g400        : ${have_mga}
" >> config
dnl
dnl Output configuration files
dnl
AC_SUBST(all_includes)
AC_SUBST(all_libraries)

AC_OUTPUT([     Makefile 		autotools/Makefile 		drivers/Makefile 		include/Makefile 		libmpeg2/Makefile 		src/Makefile 		test/Makefile 		video/Makefile ])
